function solution(numbers, k) {
    // k번째로 공을 던지는 사람은, 배열의 0번째 인덱스(즉 첫 번째 사람)부터 시작해서 
    // 2칸씩 (k - 1)번 이동한 사람이다. 그 이유는 배열의 요소는 0부터 시작하고, 
    // 첫 번째로 던지는 사람이 이미 0번째 사람이기 때문에, k번째 사람이 되려면 (k - 1)번 이동해야 한다.
  let index = (k - 1) * 2 % numbers.length;
    // 원형이기 때문에 다시 배열의 0번째부터 시작해야하기 때문에 만약 최대 수치를 넘어가면 돌아가야하기 때문!
    // (3 - 1) * 2 = 4 
    // 핵심은 % numbers.length; 를 쓰면 0,1,2렙이든 모든지 다 써먹는 다.
    // 원형/ 순서 돌아간다. / 다시 처음부터? % numbers.length;이 답이다.
  return numbers[index];
}